openapi: 3.0.3
info:
  title: fundAPP API
  description: API for Fund Transfer App (fundAPP)
  version: 1.0.0
servers:
  - url: http://localhost:5000
    description: fundAPP

paths:
  /api/v1/register_user:
    post:
      summary: Register a new user
      requestBody:
        description: User registration details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - username
                - email
                - password
      responses:
        "201":
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/v1/login_user:
    post:
      summary: Login a user
      requestBody:
        description: User login credentials
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        "200":
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                  role:
                    type: string
                  access_token:
                    type: string
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/v1/get_users:
    get:
      summary: Get a list of all users
      security:
        - jwt_auth: []
      responses:
        "200":
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    username:
                      type: string
                    email:
                      type: string
                      format: email
                    role:
                      type: string
                    balance:
                      type: number
                      format: float
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/v1/get_transactions:
    get:
      summary: Get transactions for a user
      security:
        - jwt_auth: []
      parameters:
        - in: query
          name: user_id
          schema:
            type: integer
          required: true
          description: ID of the user whose transactions to fetch
      responses:
        "200":
          description: List of transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    timestamp:
                      type: string
                      format: date-time
                    sender_name:
                      type: string
                    receiver_name:
                      type: string
                    amount:
                      type: number
                      format: float
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/v1/update_user:
    put:
      summary: Update user details
      security:
        - jwt_auth: []
      requestBody:
        description: User details to update
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                username:
                  type: string
                email:
                  type: string
                  format: email
                role:
                  type: string
                balance:
                  type: number
                  format: float
              required:
                - id
      responses:
        "200":
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/v1/delete_user:
    delete:
      summary: Delete a user
      security:
        - jwt_auth: []
      parameters:
        - name: user_id
          in: query
          required: true
          description: ID of the user to delete
          schema:
            type: integer
      responses:
        "200":
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          description: Bad Request - User ID is required
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "403":
          description: Operation denied - Admins only
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Unable to delete user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/v1/add_user:
    post:
      summary: Add a new user
      security:
        - jwt_auth: []
      requestBody:
        description: User details to add
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                role:
                  type: string
              required:
                - username
                - email
                - password
                - role
      responses:
        "201":
          description: User added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/v1/perform_transfer:
    post:
      summary: Perform a fund transfer
      security:
        - jwt_auth: []
      requestBody:
        description: Transfer details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                receiver:
                  type: string
                amount:
                  type: number
                  format: float
              required:
                - receiver
                - amount
      responses:
        "200":
          description: Transfer successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

components:
  securitySchemes:
    jwt_auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
